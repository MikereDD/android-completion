## Bash completion for android and the Android SDK tools.
##
## Copyright (c) 2009 Matt Brubeck
##
## Permission is hereby granted, free of charge, to any person obtaining a copy
## of this software and associated documentation files (the "Software"), to deal
## in the Software without restriction, including without limitation the rights
## to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the Software is
## furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included in
## all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
## AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
## OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
## THE SOFTWARE.

function _android()
{
  local cur prev opts cmds type types c subcommand
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  opts="--help --silent --verbose"
  cmds="list create move delete update"
  types="avd target project lib-project test-project sdk"
  subcommand=""
  type=""

  # Look for the subcommand.
  c=1
  while [ $c -lt $COMP_CWORD ]; do
    word="${COMP_WORDS[c]}"
    for cmd in $cmds; do
      if [ "$cmd" = "$word" ]; then
        subcommand="$word"
      fi
    done
    for w in $types; do
      if [ "$w" = "$word" ]; then
        type="$word"
      fi
    done
    c=$((++c))
  done

  case "$subcommand $type" in
    " ")
      case "$cur" in
        -*)
          COMPREPLY=( $(compgen -W "$opts" -- ${cur}) )
          ;;
      esac
      COMPREPLY=( $(compgen -W "$cmds" -- ${cur}) )
      ;;
    "list ")
      COMPREPLY=( $(compgen -W "avd target sdk" -- ${cur}) )
      ;;
    "create "|"update ")
      COMPREPLY=( $(compgen -W "avd project test-project lib-project" -- ${cur}) )
      ;;
    "move "|"delete ")
      COMPREPLY=( $(compgen -W "avd" -- ${cur}) )
      ;;
  esac

  case "$cur" in
    -*)
      case "$subcommand $type" in
        "delete ")
          COMPREPLY=( $(compgen -W "avd" -- ${cur}) )
          ;;
        "create avd")
          COMPREPLY=( $(compgen -W "--target --sdcard --path --name --force --skin --snapshot --abi" -- ${cur}) )
          ;;
        "move avd")
          COMPREPLY=( $(compgen -W "--path --name --rename" -- ${cur}) )
          ;;
        "delete avd"|"update avd")
          COMPREPLY=( $(compgen -W "--name" -- ${cur}) )
          ;;
        "create project")
          COMPREPLY=( $(compgen -W "--package --name --activity --target --path" -- ${cur}) )
          ;;
        "create lib-project")
          COMPREPLY=( $(compgen -W "--package --name --target --path" -- ${cur}) )
          ;;
        "create test-project")
          COMPREPLY=( $(compgen -W "--main --name --path" -- ${cur}) )
          ;;
        "update project")
          COMPREPLY=( $(compgen -W "--target --path --name --library --subprojects" -- ${cur}) )
          ;;
        "update lib-project")
          COMPREPLY=( $(compgen -W "--target --path" -- ${cur}) )
          ;;
        "update test-project")
          COMPREPLY=( $(compgen -W "--main --path" -- ${cur}) )
          ;;
      esac
      ;;
  esac
  return 0
}
complete -o default -F _android android
